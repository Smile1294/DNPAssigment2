@page "/kids"

@using DNPAssigment1.Persistance
@using global::Models

@inject NavigationManager NavigationManager;

 <AuthorizeView>
     <NotAuthorized>
     @if (true)
         {
             NavigationManager.NavigateTo("/login");
         }
     </NotAuthorized>
   <Authorized>
     <NavBar></NavBar>
     <div class="flex flex-col justify-center items-center">
       <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8 w-1/2 mt-2">
         <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
           <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
             <table class="min-w-full divide-y bg-gray-200 bg-opacity-60 shadow-md">
               <thead class="bg-gray-200 bg-opacity-60 shadow-md">
               <tr>
                 <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                   Name
                 </th>
                 <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                   Age
                 </th>
                 <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                   Sex
                 </th>
                 <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                   Eye Color
                 </th>
               </tr>
               </thead>

               <tbody class="bg-gray-200 bg-opacity-60 shadow-md divide-y divide-gray-200">

               @foreach (var adult in kids)
               {
                 <tr>
                   <td class="px-6 py-4 whitespace-nowrap" @onclick="@(() => Display(adult.Id))">
                     <div class="flex items-center">
                       <div class="ml-4">
                         <div class="text-sm font-medium text-gray-900">
                           @adult.FirstName @adult.LastName
                         </div>
                       </div>
                     </div>
                   </td>
                   <td class="px-6 py-4 whitespace-nowrap" @onclick="@(() => Display(adult.Id))">
                     <div class="text-sm text-gray-900"></div>
                     <div class="text-sm text-gray-500">
                       @adult.Age
                     </div>
                   </td>
                   <td class="px-6 py-4 whitespace-nowrap" @onclick="@(() => Display(adult.Id))">
                     <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                       @adult.Sex
                     </span>
                   </td>
                   <td class="px-6 py-4 whitespace-nowrap" @onclick="@(() => Display(adult.Id))">
                     @adult.EyeColor
                   </td>
                 </tr>
               }
               </tbody>
             </table>
           </div>
         </div>
       </div>
     </div>
   </Authorized>
 </AuthorizeView>


@code {
  private IList<Child> kids = new List<Child>();
  private IList<Family> _families;

  protected override async Task OnInitializedAsync()
  {
    foreach (var fam in _families)
    {
      foreach (var kid in fam.Children)
      {
        kids.Add(kid);
      }
    }
    await Task.Delay(1000);
  }

  private void Edit(int Id)
  {
    NavigationManager.NavigateTo($"EditKid/{Id}");
  }
  private void Display(int Id)
  {
    NavigationManager.NavigateTo($"DisplayKid/{Id}");
  }
  
}